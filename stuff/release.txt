Prepare a virtual machine (Ubuntuy Xenial 16.04 LTS) for the AppImage build process
===================================================================================

Install a Ubuntu 16.04.6 64bit or 32bit Server VM with hostname ubuntu[32|64].
Then update and install some base packets:
 $ sudo apt update && sudo apt -y upgrade
 $ sudo apt -y install gpm vim apt-file

After the base installation take a snapshot of the VM.

---------------

Install packages for libserialport:
 $ sudo apt -y install git wget unzip gcc make autoconf automake libtool

Install packages for libsigrok:
 $ sudo apt -y install g++ autoconf-archive pkg-config libglib2.0-dev libglibmm-2.4-dev libzip-dev libusb-1.0-0-dev libftdi1-dev libhidapi-dev libbluetooth-dev libvisa-dev libieee1284-3-dev check doxygen python3-numpy python3-dev python-gi-dev python3-setuptools swig

Set python3 as the default python version
 $ sudo update-alternatives --remove python /usr/bin/python2
 $ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10

Install packages for smuview:
 $ sudo apt -y install libboost-all-dev

For QCodeEditor and (modified) pybind11 you need cmake >= 3.6:
 $ wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
 $ sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ xenial main'
 $ sudo apt update
 $ sudo apt -y install kitware-archive-keyring
 $ sudo apt-key --keyring /etc/apt/trusted.gpg del C1F34CDD40CD72DA
 $ sudo apt -y install cmake

Install Qt 5.12.3 (SmuView needs Qt >= 5.6 but Ubuntu 16.04 comes with 5.5)
 $ sudo add-apt-repository -y ppa:beineri/opt-qt-5.12.3-xenial
 $ sudo apt update
 $ sudo apt -y install qt512base qt512-meta-full
 $ source /opt/qt512/bin/qt512-env.sh

Install newest Qwt 6.1.4:
 $ sudo apt -y install mesa-common-dev libgl1-mesa-dev
 $ wget https://sourceforge.net/projects/qwt/files/qwt/6.1.4/qwt-6.1.4.tar.bz2
 $ tar xf qwt-6.1.4.tar.bz2
 $ cd qwt-6.1.4
 $ qmake qwt.pro
 $ make
Now change the QWT_INSTALL_PREFIX in qwtconfig.pri to /usr and then install:
 $ sudo make install

Install shellcheck for i686 (The x86_64 appimagecraft AppImage comes with an actual shellcheck, but i686 not). Only v0.5.0 builds with Ubuntu 16.04:
 $ sudo apt -y install cabal-install
 $ sudo cabal update
 $ wget https://github.com/koalaman/shellcheck/archive/v0.5.0.tar.gz
 $ tar xf v0.5.0.tar.gz
 $ cd shellcheck-0.5.0
 $ sudo cabal install --prefix=/usr

After the advanced installation take a snapshot of the VM.


Build the SmuView release
=========================

 $ source /opt/qt512/bin/qt512-env.sh
 $ sudo ldconfig
 $ cd

 $ wget https://github.com/TheAssassin/appimagecraft/releases/download/continuous/appimagecraft-x86_64.AppImage
 $ chmod ug+x appimagecraft-x86_64.AppImage
or
 $ wget https://github.com/TheAssassin/appimagecraft/releases/download/continuous/appimagecraft-i386.AppImage
 $ chmod ug+x appimagecraft-i386.AppImage

 $ git clone https://github.com/knarfS/smuview.git
 $ cd smuview
 $ ../appimagecraft-x86_64.AppImage genscripts -d build/ # TODO: Single command
 $ cd build                                              # TODO
 $ ./build.sh                                            # TODO

---------------

The alternative to linuxdeployqt is the sigrok AppImageKit script (not tested in a long time!):
 $ cd
 $ sudo apt-get -y install desktop-file-utils libcairo2-dev libfuse-dev zsync
 $ git clone --single-branch --recursive https://github.com/AppImage/AppImageKit
 $ cd AppImageKit
 4 sudo apt -y install zsync git libarchive-dev autoconf libtool make gcc g++ libtool libfuse-dev liblzma-dev libglib2.0-dev libssl-dev libinotifytools0-dev liblz4-dev libcairo-dev desktop-file-utils
 $ patch -p1 < ../sigrok-util/cross-compile/appimage/chdir.patch
 $ ./build.sh
 $ mkdir -p build/lib/appimagekit
 $ cp build/out/mksquashfs build/lib/appimagekit


Misc
====

To debug the SmuView AppImage:
 $ export QT_DEBUG_PLUGINS=1
 $ LD_DEBUG=libs ./SmuView.AppImage
